module.exports = {
    defaultSeverity: 'warning',
    extends: [ 'stylelint-config-standard', 'stylelint-config-rational-order' ],
    ignoreFiles: [
        '**/*.js',
        '**/*.mjs',
        '**/*.ts',
        '**/*.json',
        '**/*.md',
    ],
    overrides: [
        {
            customSyntax: 'postcss-html',
            extends: [ 'stylelint-config-recommended-vue/scss' ],
            files: [ '**/*.vue' ],
        },
        {
            customSyntax: 'postcss-scss',
            extends: [
                'stylelint-config-standard-scss',
                'stylelint-config-sass-guidelines',
                'stylelint-config-recommended-scss',
            ],
            files: [ '**/*.scss' ],
            plugins: [ 'stylelint-scss' ],
            rules: {
                'no-invalid-double-slash-comments': null,
                'scss/at-else-closing-brace-newline-after': 'always-last-in-chain',
                'scss/at-else-closing-brace-space-after': 'always-intermediate',
                'scss/at-else-empty-line-before': 'never',
                'scss/at-function-parentheses-space-before': 'never',
                'scss/at-if-closing-brace-newline-after': 'always-last-in-chain',
                'scss/at-if-closing-brace-space-after': 'always-intermediate',
                'scss/at-rule-no-unknown': [
                    true,
                    {
                        ignoreAtRules: [
                            '/^@/',
                            'custom',
                            'tailwind',
                            'extends',
                            'apply',
                            'variants',
                            'screen',
                        ],
                    },
                ],
                'scss/dollar-variable-empty-line-before': [
                    'always',
                    {
                        except: [ 'after-dollar-variable' ],
                        ignore: [ 'after-comment', 'inside-single-line-block' ],
                    },
                ],
                'scss/double-slash-comment-empty-line-before': [ 'always', { ignore: [ 'between-comments' ], },],
            },
        },
    ],
    plugins: [
        '@stylistic/stylelint-plugin',
        'stylelint-no-unsupported-browser-features',
        'stylelint-order',
        'stylelint-config-rational-order/plugin',
    ],
    reportNeedlessDisables: true,
    root: true,
    rules: {
        '@stylistic/color-hex-case': 'upper',
        '@stylistic/function-parentheses-space-inside': 'always',
        '@stylistic/indentation': 4,
        '@stylistic/number-leading-zero': 'never',
        '@stylistic/string-quotes': 'double',
        'alpha-value-notation': [ 'percentage', { exceptProperties: [ 'opacity' ], },],
        'at-rule-empty-line-before': [
            'always',
            {
                except: [
                    'after-same-name',
                    'blockless-after-same-name-blockless',
                    'blockless-after-blockless',
                ],
                ignore: [ 'after-comment', 'first-nested' ],
                ignoreAtRules: [ 'if', 'else' ],
            },
        ],
        'at-rule-no-unknown': null,
        'block-no-empty': null,
        'color-function-notation': 'modern',
        'comment-empty-line-before': [ 'always', { ignore: [ 'after-comment', 'stylelint-commands' ], },],
        'custom-property-empty-line-before': [
            'always',
            {
                except: [ 'after-comment', 'after-custom-property' ],
                ignore: [ 'after-comment', 'inside-single-line-block' ],
            },
        ],
        'declaration-empty-line-before': [
            'always',
            {
                except: [ 'after-comment', 'after-declaration' ],
                ignore: [ 'after-declaration' ],
            },
        ],
        'function-url-quotes': 'always',
        'max-nesting-depth': 9,
        'media-query-no-invalid': true,
        'no-descending-specificity': null,
        'no-invalid-position-at-import-rule': [ true, { ignoreAtRules: [ '/^tailwind/', 'tailwind' ], },],
        'order/order': [
            [
                'dollar-variables',
                'custom-properties',
                'at-variables',
                {
                    hasBlock: false,
                    name: 'extend',
                    type: 'at-rule',
                },
                {
                    hasBlock: false,
                    name: 'apply',
                    type: 'at-rule',
                },
                {
                    hasBlock: false,
                    name: 'include',
                    type: 'at-rule',
                },
                'declarations',
                'rules',
                { type: 'at-rule', },
                {
                    hasBlock: true,
                    type: 'at-rule',
                },
                {
                    hasBlock: true,
                    name: 'include',
                    type: 'at-rule',
                },
                {
                    hasBlock: true,
                    name: 'media',
                    type: 'at-rule',
                },
                {
                    hasBlock: true,
                    name: 'screen',
                    type: 'at-rule',
                },
                'less-mixins',
                {
                    hasBlock: false,
                    name: 'return',
                    type: 'at-rule',
                },
            ],
            {
                severity: 'warning',
                unspecified: 'bottom',
            },
        ],
        'order/properties-alphabetical-order': null,
        'order/properties-order': [
            [],
            {
                severity: 'warning',
                unspecified: 'bottom',
            },
        ],
        'plugin/no-unsupported-browser-features': [
            null,
            {
                ignore: [
                    'multicolumn',
                    'object-fit',
                    'calc',
                    'border-radius',
                    'user-select-none',
                    'pointer-events',
                    'background-img-opts',
                    'boxshadow',
                    'css-boxshadow',
                    'css-nesting',
                    'nesting',
                    'animation',
                    'css-animation',
                    'gradients',
                    'css-gradients',
                    'transitions',
                    'css-transitions',
                    'transform',
                    'will-change',
                    'font-unicode-range',
                    'transforms2d',
                    'transforms3d',
                    'viewport-units',
                    'css-appearance',
                    'css-filters',
                    'css3-cursors',
                    'css3-cursors-newer',
                    'outline',
                    'flexbox',
                    'fixed',
                    'fontface',
                    'css-fixed',
                ],
                severity: 'warning',
            },
        ],
        'plugin/rational-order': [ true, { severity: 'warning', },],
        'property-no-unknown': [
            true,
            {
                ignoreSelectors: [
                    '::v-deep',
                    '::deep',
                    '::v-global',
                    '::global',
                    '::v-slotted',
                    '::slotted',
                ],
            },
        ],
        'property-no-vendor-prefix': true,
        'rule-empty-line-before': [
            'always',
            {
                except: [ 'after-single-line-comment' ],
                ignore: [ 'after-comment', 'inside-block' ],
            },
        ],
        'selector-class-pattern': [ '^([a-z][a-z0-9]*)((--?|(__)?)[a-z0-9]+)*$', { resolveNestedSelectors: true, },],
        'selector-id-pattern': null,
        'selector-max-compound-selectors': 9,
        'selector-max-id': 2,
        'selector-no-qualifying-type': [ true, { ignore: [ 'class', 'attribute' ], },],
        'selector-pseudo-class-no-unknown': [
            true,
            {
                ignorePseudoClasses: [
                    'v-deep',
                    'deep',
                    'v-global',
                    'global',
                    'v-slotted',
                    'slotted',
                    'export',
                ],
            },
        ],
        'selector-pseudo-element-no-unknown': [
            true,
            {
                ignorePseudoElements: [
                    'css-doodle',
                    'v-deep',
                    'deep',
                    'v-global',
                    'global',
                    'v-slotted',
                    'slotted',
                    'export',
                ],
            },
        ],
        'selector-type-no-unknown': [
            true,
            {
                ignore: [ 'custom-elements' ],
                ignoreTypes: [
                    'css-doodle',
                    'v-deep',
                    'deep',
                    'v-global',
                    'global',
                    'v-slotted',
                    'slotted',
                    'export',
                ],
            },
        ],
        'unit-allowed-list': [
            'vh',
            'vw',
            'px',
            'em',
            'rem',
            's',
            'fr',
            'deg',
            '%',
        ],
        'value-keyword-case': [
            'lower',
            {
                camelCaseSvgKeywords: true,
                ignoreProperties: [ 'optimizeSpeed' ],
            },
        ],
    },
};
